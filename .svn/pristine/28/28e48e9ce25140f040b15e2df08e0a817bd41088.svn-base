package internal.qaauto.inline.tom.markets;

import org.apache.commons.lang.StringUtils;
import org.openqa.selenium.By;
import org.openqa.selenium.WebElement;

import java.util.LinkedList;
import java.util.List;

/**
 * Created by Harish Renukunta on 06/10/2014.
 */
public class Market implements MarketInterface {

    private WebElement market;

    private static final String MARKET_TITLE = "";

    private static final String MARKET_OUTCOME = "";

    private static final String MARKET_EXPAND_CLASS = "";

    private static final String MARKET_COLLAPSE_CLASS = "";

    private By titleLocator = new By.ByCssSelector(MARKET_TITLE);

    private By outcomeLocator = new By.ByCssSelector(MARKET_OUTCOME);

    public Market(WebElement market){
        this.market = market;
    }

    @Override
    public WebElement getMarket() {
        return market;
    }

    @Override
    public WebElement getChildWebElement(By childElementLocator) {
        return null;
    }

    @Override
    public String getMarketTitle() {
        final List<WebElement> marketTitle = market.findElements(titleLocator);
        if(marketTitle.isEmpty()) {
            return StringUtils.EMPTY;
        }else {
            return marketTitle.get(0).getText();
        }
    }

    @Override
    public List<MarketOutcomeInterface> getOutcomes() {
        List<WebElement> marketOutcomeWebElements = market.findElements(outcomeLocator);
        if(marketOutcomeWebElements.size() == 0 ){
            return null;
        }
        List<MarketOutcomeInterface> marketOutcomes = new LinkedList<MarketOutcomeInterface>();
        for(WebElement marketOutcomeWebElement : marketOutcomeWebElements){
            marketOutcomes.add(new MarketOutcome(marketOutcomeWebElement));
        }
        return marketOutcomes;
    }

    @Override
    public MarketOutcomeInterface getOutcomeByPosition(int pos) {
        List<MarketOutcomeInterface> marketOutcomes = getOutcomes();
        if(marketOutcomes.size() == 0) {
            return null;
        }else{
            return marketOutcomes.get(pos);
        }
    }

    @Override
    public void collapse() {
        if(isExpanded()) {
            market.findElements(titleLocator).get(0).click();
        }
    }

    @Override
    public void expand() {
        if(isCollapsed()){
            market.findElements(titleLocator).get(0).click();
        }
    }

    @Override
    public boolean isCollapsed() {
        if(MARKET_COLLAPSE_CLASS.equals(getChildWebElement(titleLocator).getCssValue("class"))){
            return true;
        }else{
            return false;
        }
    }

    @Override
    public boolean isExpanded() {
        return false;
    }

    @Override
    public boolean isSuspended() {
        if(MARKET_EXPAND_CLASS.equals(getChildWebElement(titleLocator).getCssValue("class"))){
            return true;
        }else{
            return false;
        }
    }
}

package internal.qaauto.inrunning.StepCandidatesHelperMethods;

import internal.qaauto.framework.Assert;
import internal.qaauto.inrunning.framework.InRunningBaseStep;
import internal.qaauto.inrunning.tom.coupons.LeftNavLiveNowEvent;
import internal.qaauto.inrunning.tom.coupons.LeftNavLiveNowEventInterface;
import internal.qaauto.inrunning.tom.coupons.LeftNavUpcomingEventInterface;
import internal.qaauto.inrunning.tom.leftnav.LiveNowEventsComponentInterface;
import internal.qaauto.inrunning.tom.leftnav.SportInterface;
import internal.qaauto.inrunning.tom.leftnav.UpcomingEventsComponentInterface;
import internal.qaauto.inrunning.tom.markets.OutcomeInterface;

/**
 * Created by Harish Renukunta on 22/10/2014.
 */
public class LeftNavEventStepsHelperMethods extends InRunningBaseStep {

    private final static String ODDS_MATCH = "Odds match. Price:%s";

    private final static String ODDS_MISMATCH = "Odds mismatch. Outcome desc:%s Expected:%s Actual:%s";

    private final static String EVENT_FOUND = "Coupon with title %s found";

    private final static String EVENT_NOT_FOUND = "Coupon with title %s not found";

    private final static String SPORT_GROUP_COLLAPSED = "Sport group %s collapsed";

    private final static String SPORT_GROUP_EXPANDED = "Sport group %s expanded";

    private final static String SPORT_GROUP_FOUND = "Sport group %s found";

    private final static String SPORT_GROUP_NOT_FOUND = "Sport group %s not found";

    private UpcomingEventsComponentInterface getUpcomingEventsComponent() {
        return getLiveBettingPage().getUpcomingEventsComponent();
    }

    private LiveNowEventsComponentInterface getLiveNowCouponsComponent() {
        return getLiveBettingPage().getLiveNowCouponsComponent();
    }

    public LeftNavLiveNowEventInterface getLeftNavLiveNowEventByGameID(final String gameID) {
        LiveNowEventsComponentInterface liveNowCouponsComponent = getLiveNowCouponsComponent();
        LeftNavLiveNowEventInterface liveNowCoupon = (LeftNavLiveNowEvent) liveNowCouponsComponent.getCouponByGameID(gameID);
        return liveNowCoupon;
    }

    public LeftNavUpcomingEventInterface getLeftNavUpcomingCouponByTitle(final String title) {
        UpcomingEventsComponentInterface upcomingCouponsComponent = getUpcomingEventsComponent();
        return upcomingCouponsComponent.getUpcomingEventByTitle(title);
    }

    public void verifyOddsOfOutcome(final OutcomeInterface outcome, final String expectedOdd) {
        final String outcomePrice = outcome.getPrice();
        Assert.assertEquals(expectedOdd, outcomePrice, String.format(ODDS_MATCH, expectedOdd),
                String.format(ODDS_MISMATCH, outcome.getDescription(), expectedOdd,
                        outcomePrice));
    }

    public void verifyLiveNowEventExist(final String sport, final String couponTitle){
        final LeftNavLiveNowEventInterface liveNowCoupon = getLiveBettingPage().getLiveNowCouponsComponent().getLiveNowEventByName(
                sport, couponTitle);
        Assert.assertNotNull(liveNowCoupon, String.format(EVENT_FOUND, couponTitle), String.format(EVENT_NOT_FOUND, couponTitle));
    }

    public boolean isSportGroupCollapsed(final SportInterface sportGroup){
        return sportGroup.isCollapsed();
    }

    public void verifySportGroupInLiveNowCollapsed(final String sport){
        final LiveNowEventsComponentInterface liveNowComponent = getLiveBettingPage().getLiveNowCouponsComponent();
        final SportInterface sportContainer = liveNowComponent.getSportByTitle(sport);
        verifySportGroupExist(sportContainer, sport);
        Assert.assertTrue(isSportGroupCollapsed(sportContainer), String.format(SPORT_GROUP_COLLAPSED,sport), String.format(SPORT_GROUP_EXPANDED,sport));
    }
    public void verifySportGroupExist(final SportInterface sportContainer, final String sport){
        Assert.assertNotNull(sportContainer, String.format(SPORT_GROUP_FOUND,sport), String.format(SPORT_GROUP_NOT_FOUND, sport));
    }

    public void verifySportGroupInLiveNowExpanded(final String sport){
        final LiveNowEventsComponentInterface liveNowComponent = getLiveBettingPage().getLiveNowCouponsComponent();
        final SportInterface sportContainer = liveNowComponent.getSportByTitle(sport);
        verifySportGroupExist(sportContainer, sport);
        Assert.assertTrue(!isSportGroupCollapsed(sportContainer), String.format(SPORT_GROUP_EXPANDED,sport), String.format(SPORT_GROUP_COLLAPSED,sport));
    }

}
